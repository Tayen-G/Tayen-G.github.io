{"meta":{"title":"Tayen's Blog","subtitle":"行走在路上~","description":null,"author":"Tayen","url":"https://tayen-g.github.io"},"pages":[{"title":"分类","date":"2017-07-28T10:06:38.000Z","updated":"2017-07-28T02:44:04.504Z","comments":false,"path":"categories/index.html","permalink":"https://tayen-g.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2017-07-28T03:38:29.720Z","updated":"2017-07-28T03:38:29.659Z","comments":false,"path":"tags/index.html","permalink":"https://tayen-g.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Ajax学习笔记（理论篇）","slug":"2017-7-27-Ajax学习笔记（理论篇）","date":"2017-07-27T15:42:25.000Z","updated":"2017-07-28T09:28:06.440Z","comments":true,"path":"2017/07/27/2017-7-27-Ajax学习笔记（理论篇）/","link":"","permalink":"https://tayen-g.github.io/2017/07/27/2017-7-27-Ajax学习笔记（理论篇）/","excerpt":"AJAX即异步JavaScript和XML。是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。通过在后台与服务器进行少量数据交换，可以使网页实现异步更新，在不重新加载整个网页的情况下，对网页的某部分内容进行更新。","text":"AJAX即异步JavaScript和XML。是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。通过在后台与服务器进行少量数据交换，可以使网页实现异步更新，在不重新加载整个网页的情况下，对网页的某部分内容进行更新。 了解HTTP 计算机通过网络进行通信的规则 无状态的协议 不建立持久连接，服务端不保留客户端信息 请求过程 建立tcp连接 浏览器向服务器发送请求命令 浏览器发送请求头信息 服务器应答 服务器发送应答头信息 服务器向浏览器发送数据 服务器关闭tcp连接 http请求（四个部分） 请求的方法或动作（例如GET或POST） 正在请求的URL 请求头，包含客户端环境信息，身份验证信息等 请求体，请求的正文，包含客户端提交的信息 GET一般用于信息获取，使用URL传递参数，对发送信息的数量有限制。幂等：执行一次或执行多次获取的信息是相同的。 POST一般用于修改服务器上的资源，对于发送的信息数量无限制。 HTTP响应 状态码，显示请求成功/失败； 1xx 受到请求，正在处理 2xx 请求被正确接收 3xx 重定向 4xx 客户端错误（提交的请求有误） 5xx 服务器错误（不能完成对请求的处理） 响应头，包含服务端的一些信息； 响应体，响应正文，服务器返回的资源。 Ajax核心 IE6以上的浏览器创建XMLHttpRequset()对象eg：request=new XMLHttpRequest(); IE6以下request=new ActiveXObject(“Microsoft.XMLHTTP”); XMLHttpRequest发送请求 构造请求open(method,url[,async])method：发送请求的方法url：请求的地址（可使用相对地址）async：请求是异步/同步（true/false）默认true 发送send(string)string：GET方法:NULL；POST方法:需要参数，以及http头信息 XMLHttpRequest获取响应 reponseText：获取字符串形式的响应数据 reponseXML：获取XML形式的响应数据 status/statusText：以数字/文本的形式返回http状态码 getAllResponseHeader()：获取所有的响应报头 getResponseHeaer()：查询响应中某个字段的值 readyState属性：代表服务器响应的变化 0：请求未初始化，open还没调用 1：服务器连接已建立，open已调用 2：请求已接收，收到头信息 3：请求处理中，收到响应主体 4：请求已完成，响应已就绪 用onreadystatechange方法判断响应是否完成 1234request.onreaystatechange=function()&#123; if(request.readyState===4&amp;&amp;request.status===200//请求成功) //进一步操作&#125;","categories":[{"name":"学习","slug":"学习","permalink":"https://tayen-g.github.io/categories/学习/"}],"tags":[{"name":"Ajax","slug":"Ajax","permalink":"https://tayen-g.github.io/tags/Ajax/"},{"name":"Php","slug":"Php","permalink":"https://tayen-g.github.io/tags/Php/"}]}]}